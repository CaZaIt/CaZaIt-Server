buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {

	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	// S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// Security
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	// testImplementation 'org.springframework.security:spring-security-test'
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	// Querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

	// Junit5
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2')
	implementation('org.junit.jupiter:junit-jupiter-params:5.9.2')
	testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')

}

jar {
	enabled = false;
}

test {
	useJUnitPlatform()
}

/*
 * Querydsl Setting Information
 */
def querydslDir = 'src/main/generated/querydsl'

querydsl {	// JPA 사용 및 경로 설정
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets { // Build시 사용할 sourceSet 추가 설정
	main.java.srcDir querydslDir
}

compileQuerydsl {	// Querydsl 컴파일 옵션 설정
	options.annotationProcessorPath = configurations.querydsl
}

configurations {	// compileClassPath 상속 설정
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
