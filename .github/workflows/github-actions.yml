# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
    
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: cazait-deploy-bucket
  S3_BUCKET_DIR: dev-snapshots
  CODE_DEPLOY_APPLICATION_NAME: cazait
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cazait-deploy-group
    
    

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |  
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      # uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      # with:
      run: ./gradlew clean build --exclude-task test

    
  deploy:
    runs-on: ubuntu-22.04
    
    needs: build
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_ARCHIVE_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.S3_ARCHIVE_SECERET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload to AWS S3
      run: aws s3 cp --region ${{ env.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$S3_BUCKET_DIR/$GITHUB_SHA.zip

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
      
    
